// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        javaCompileVersion = JavaVersion.VERSION_1_8
        jvmTarget = "1.8"
        defaultCompileSdkVersion = 33
        defaultTargetSdkVersion = 33
        defaultMinSdkVersion = 24

        versions = [
                hilt : "2.42",
                coreKtx : "1.10.1",
                appCompat : "1.6.1",
                compose : "1.3.0",
                lifecycleRuntimeKtx: "2.6.1",
                activityCompose : "1.7.2",
                material : "1.8.0",
                coroutines : "1.5.2",
                junit : "4.13.2",
                mockito : "4.0.0",
                espressoJunit : "1.1.3",
                espressoCore : "3.4.0",
                constraintlayout: "2.1.4",
                room : "2.4.1",
                roomCommon: "2.4.3",

                okHttp : "4.9.0",
                retrofit : "2.9.0",
                moshi : "1.13.0",
                moshiKotlinCodegen: "1.13.0",

                viewModel : "2.4.0",
                navigationCompose : "2.4.0-rc01",
                hiltNavigationCompose: "1.0.0-rc01",

                activity: "1.6.0",
                fragment: "1.5.5"

        ]

        androidx = [
                core : "androidx.core:core-ktx:${versions.coreKtx}",
                appCompat : "androidx.appcompat:appcompat:${versions.appCompat}",
                composeUi : "androidx.compose.ui:ui:${versions.compose}",
                composeMaterial : "androidx.compose.material:material:${versions.compose}",
                composeUiToolingPreview: "androidx.compose.ui:ui-tooling-preview:${versions.compose}",
                lifecycleRuntimeKtx : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycleRuntimeKtx}",
                composeActivity : "androidx.activity:activity-compose:${versions.activityCompose}"
        ]

        androidx = [
                core : "androidx.core:core-ktx:${versions.coreKtx}",
                appCompat : "androidx.appcompat:appcompat:${versions.appCompat}",
                composeUi : "androidx.compose.ui:ui:${versions.compose}",
                composeMaterial : "androidx.compose.material:material:${versions.compose}",
                composeUiToolingPreview: "androidx.compose.ui:ui-tooling-preview:${versions.compose}",
                lifecycleRuntimeKtx : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycleRuntimeKtx}",
                composeActivity : "androidx.activity:activity-compose:${versions.activityCompose}",
                constraintlayout: "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}",

                activity: "androidx.activity:activity-ktx:${versions.activity}",
                fragment: "androidx.fragment:fragment-ktx:${versions.fragment}",

                viewModelKtx : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.viewModel}",
                viewModelCompose : "androidx.lifecycle:lifecycle-viewmodel-compose:${versions.viewModel}",
                navigationCompose : "androidx.navigation:navigation-compose:${versions.navigationCompose}",
                hiltNavigationCompose : "androidx.hilt:hilt-navigation-compose:${versions.hiltNavigationCompose}"

        ]

        material = [
                material: "com.google.android.material:material:${versions.material}"
        ]
        coroutines = [
                coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
        ]
        di = [
                hiltAndroid : "com.google.dagger:hilt-android:${versions.hilt}",
                hiltCompiler: "com.google.dagger:hilt-compiler:${versions.hilt}"
        ]
        test = [
                junit :"junit:junit:${versions.junit}",
                coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}",
                mockito : "org.mockito.kotlin:mockito-kotlin:${versions.mockito}"
        ]
        androidTest = [
                junit : "androidx.test.ext:junit:${versions.espressoJunit}",
                espressoCore : "androidx.test.espresso:espresso-core:${versions.espressoCore}",
                composeUiTestJunit: "androidx.compose.ui:ui-test-junit4:${versions.compose}"
        ]

        persistence = [
                roomRuntime : "androidx.room:room-runtime:${versions.room}",
                roomKtx : "androidx.room:room-ktx:${versions.room}",
                roomCompiler: "androidx.room:room-compiler:${versions.room}",
                roomCommon: "androidx.room:room-common:${versions.roomCommon}",
        ]

        network = [
                okHttp : "com.squareup.okhttp3:okhttp:${versions.okHttp}",
                retrofit : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
                retrofitMoshi: "com.squareup.retrofit2:converter-moshi:${versions.retrofit}",
                moshi : "com.squareup.moshi:moshi:${versions.moshi}",
                moshiKotlin : "com.squareup.moshi:moshi-kotlin:${versions.moshi}",
                moshiKotlinCodegen:  "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshiKotlinCodegen}"
        ]

    }
}

plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'com.android.library' version '8.0.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id 'com.google.dagger.hilt.android' version '2.42' apply false
    // Necess√°rio para Moshi:
    id 'org.jetbrains.kotlin.kapt' version '1.7.20' apply false
}