// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        javaCompileVersion = JavaVersion.VERSION_17
        jvmTargetNumber = "17"
        defaultCompileSdkVersion = 34
        defaultTargetSdkVersion = 34
        defaultMinSdkVersion = 24
        kotlinCompilerExtensionVersionNumber = '1.4.4'

        versions = [

                kotlinReflect          : "1.9.10",
                kotlinPlugin           : "1.8.10",

                hilt                   : "2.48",
                coreKtx                : "1.10.1",
                appCompat              : "1.6.1",
                compose                : "1.3.0",
                lifecycleRuntimeKtx    : "2.6.1",
                lifecycleRuntimeCompose: "2.7.0-beta01",
                activityCompose        : "1.7.2",
                material               : "1.8.0",
                coroutines             : "1.5.2",
                junit                  : "4.13.2",
                mockito                : "5.1.0",
                espressoJunit          : "1.1.3",
                espressoCore           : "3.4.0",
                constraintlayout       : "2.1.4",
                room                   : "2.4.1",
                roomCommon             : "2.4.3",

                okHttp                 : "4.9.0",
                retrofit               : "2.9.0",
                moshi                  : "1.13.0",
                moshiKotlinCodegen     : "1.13.0",

                viewModel              : "2.4.0",
                navigationCompose      : "2.5.3",
                hiltNavigationCompose  : "1.0.0-rc01",

                activity               : "1.6.0",
                fragment               : "1.5.5",

                androidxTestCore       : "1.5.0",
                testRunner             : "1.5.2",
                testMonitor            : "1.6.1",
                truth                  : "1.1.3",
                coreTesting            : "2.1.0",
                roomTesting            : "2.5.2",
                uiTestManifest         : "1.5.0",
                navigationTesting      : "2.7.4",

                androidTestCore        : "1.4.0",
                androidTestJunit       : "1.1.3",
                orchestrator           : "1.4.1",

                dialog : "1.2.0",

                jacocoTool             : "0.8.11"

        ]

        kotlinLibraries = [
                kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlinReflect}"
        ]

        androidx = [
                core                   : "androidx.core:core-ktx:${versions.coreKtx}",
                appCompat              : "androidx.appcompat:appcompat:${versions.appCompat}",
                composeUi              : "androidx.compose.ui:ui:${versions.compose}",
                composeMaterial        : "androidx.compose.material:material:${versions.compose}",
                composeUiToolingPreview: "androidx.compose.ui:ui-tooling-preview:${versions.compose}",
                lifecycleRuntimeKtx    : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycleRuntimeKtx}",
                lifecycleRuntimeCompose: "androidx.lifecycle:lifecycle-runtime-compose:${versions.lifecycleRuntimeCompose}",
                composeActivity        : "androidx.activity:activity-compose:${versions.activityCompose}",
                constraintlayout       : "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}",

                activity               : "androidx.activity:activity-ktx:${versions.activity}",
                fragment               : "androidx.fragment:fragment-ktx:${versions.fragment}",

                viewModelKtx           : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.viewModel}",
                viewModelCompose       : "androidx.lifecycle:lifecycle-viewmodel-compose:${versions.viewModel}",
                navigationCompose      : "androidx.navigation:navigation-compose:${versions.navigationCompose}",
                hiltNavigationCompose  : "androidx.hilt:hilt-navigation-compose:${versions.hiltNavigationCompose}"

        ]

        material = [
                material: "com.google.android.material:material:${versions.material}"
        ]
        coroutines = [
                coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
        ]
        di = [
                hiltAndroid        : "com.google.dagger:hilt-android:${versions.hilt}",
                hiltCompiler       : "com.google.dagger:hilt-compiler:${versions.hilt}",
                hiltAndrodiTesting : "com.google.dagger:hilt-android-testing:${versions.hilt}",
                hiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:${versions.hilt}",
        ]

        test = [
                junit     : "junit:junit:${versions.junit}",
                coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}",
                mockito   : "org.mockito.kotlin:mockito-kotlin:${versions.mockito}"
        ]
        androidTest = [
                junit             : "androidx.test.ext:junit:${versions.espressoJunit}",
                espressoCore      : "androidx.test.espresso:espresso-core:${versions.espressoCore}",
                idlingResource    : "androidx.test.espresso:espresso-idling-resource:${versions.espressoCore}",
                composeUiTestJunit: "androidx.compose.ui:ui-test-junit4:${versions.compose}",
                composeManifest   : "androidx.compose.ui:ui-test-manifest:${versions.compose}",
                hilt              : "com.google.dagger:hilt-android-testing:${versions.hilt}",
                hiltCompiler      : "com.google.dagger:hilt-android-compiler:${versions.hilt}",
                core              : "androidx.test:core:${versions.androidTestCore}",
                runner            : "androidx.test:runner:${versions.androidTestCore}",
                rules             : "androidx.test:rules:${versions.androidTestCore}",
                orchestrator      : "androidx.test:orchestrator:${versions.orchestrator}",
                testMonitor       : "androidx.test:monitor:${versions.testMonitor}",
                truth             : "com.google.truth:truth:${versions.truth}",
                coreTesting       : "androidx.arch.core:core-testing:${versions.coreTesting}",
                roomTesting       : "androidx.room:room-testing:${versions.roomTesting}",
                navigationTesting : "androidx.navigation:navigation-testing:${versions.navigationTesting}"
        ]

        persistence = [
                roomRuntime : "androidx.room:room-runtime:${versions.room}",
                roomKtx     : "androidx.room:room-ktx:${versions.room}",
                roomCompiler: "androidx.room:room-compiler:${versions.room}",
                roomCommon  : "androidx.room:room-common:${versions.roomCommon}",
        ]

        network = [
                okHttp            : "com.squareup.okhttp3:okhttp:${versions.okHttp}",
                retrofit          : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
                retrofitMoshi     : "com.squareup.retrofit2:converter-moshi:${versions.retrofit}",
                moshi             : "com.squareup.moshi:moshi:${versions.moshi}",
                moshiKotlin       : "com.squareup.moshi:moshi-kotlin:${versions.moshi}",
                moshiKotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshiKotlinCodegen}"
        ]
        dialog = [
                core : "com.maxkeppeler.sheets-compose-dialogs:core:${versions.dialog}",
                calendar: "com.maxkeppeler.sheets-compose-dialogs:calendar:${versions.dialog}",
                clock: "com.maxkeppeler.sheets-compose-dialogs:clock:${versions.dialog}"
        ]

        plugin_hilt_version = versions.hilt
        plugin_kotlin_version = versions.kotlinPlugin
        plugin_android_version = '8.0.2'
    }

    dependencies {
        classpath "org.jacoco:org.jacoco.core:${versions.jacocoTool}"
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'org.jetbrains.kotlinx:kover-gradle-plugin:0.7.6'
    }
}


plugins {
    id 'com.android.application' version "$plugin_android_version" apply false
    id 'com.android.library' version "$plugin_android_version" apply false
    id 'org.jetbrains.kotlin.android' version "$plugin_kotlin_version" apply false
    id 'com.google.dagger.hilt.android' version "$plugin_hilt_version" apply false
    id "org.jetbrains.kotlin.jvm" version "$plugin_kotlin_version"
    // NecessÃ¡rio para Moshi:
    id 'org.jetbrains.kotlin.kapt' version "$plugin_kotlin_version" apply false
    // kover
    id 'org.jetbrains.kotlinx.kover' version "0.7.5" apply false
}



allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'org.jetbrains.kotlinx.kover'
    koverReport {
        filters {
            excludes {
                classes("*Factory*")
                classes("*Hilt*")
                classes("*Activity*")
                classes("*Application*")
                classes("*Module*")
                classes("*RoomTypeConverters*")
                packages("*.ui*")
                packages("br.com.rafaelleal.minhasferias.app.graphs")
                packages("br.com.rafaelleal.minhasferias.data_local.db")
                packages("*.dao")
                packages("*.screens")
                annotatedBy("dagger.Module")
            }
        }
    }
}

subprojects {
    afterEvaluate { project ->
        project.apply from: '../tools/jacoco.gradle'
    }
}



// Gradle wrapper: https://docs.gradle.org/current/userguide/gradle_wrapper.html#customizing_wrapper
tasks.named('wrapper') {
    description = "Gradle wrapper task to update binary"
    gradleVersion = "8.6"
    distributionType = Wrapper.DistributionType.BIN
}

// Kover : ./gradlew koverHtmlReportDebug